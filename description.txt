ClassLoaders:
JvmComprehension сделан разработчиком - будет загружаться Application ClassLoader, 
Object & Integer - базовые системные классы, будут загружены Bootstrap ClassLoader
После загрузки происходит связывание - в числе прочего проверка валидности, подготовка примитивов, связывание ссылок на другие классы. 
Затем инициализация. В случае JvmComprehension инициализировать ничего не нужно.

Object & Integer загружать не нужно, это системные классы, которые в Metaspace будут 

1. Выделяем область памяти в стеке под int. Пишем туда 1
2. Выделяем область памяти в heap для Object и ссылку на нее записываем в свежевыделенную память в стеке.
3. Выделяем область памяти в heap для Integer и ссылку на нее записываем в свежевыделенную память в стеке. 
4. Выделяем область памяти в стеке под метод printAll, передаем туда значения и ссылки на heap
5. Выделяем область памяти в heap для Integer и ссылку на нее записываем в свежевыделенную память в стеке. 
6. Выделяются области памяти в стеке для проведения операций, туда передаются либо ссылки на heap, либо значения из стека. o.toString() в Metaspace. 
7. Выделяем область памяти в стеке под System.out.println

Про сборщик мусора тут нечего сказать. Вообще, в какие-то моменты выполнение программы замирает (Stop the world), мусорщиком составляется граф объектов, стирается все, до чего нельзя добраться от рутовых ссылок (GC-roots), и выполнение программы продолжается.

















